% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_ontologies.R
\name{run_go}
\alias{run_go}
\title{Run GO analysis on parallel.}
\usage{
run_go(dat, species = c("human", "mouse"), universe, ontologies, cores,
  run_parallel = TRUE)
}
\arguments{
\item{dat}{Data frame with two columns: \strong{entrez} and
\strong{set_label}. The column \strong{entrez} should contain ENTREZ gene
identifiers; the column \strong{set_label} should contain labels for
identifiers that will be analyzed as a group.}

\item{species}{Character string specifying the species, must be one of two
"human" (default) or "mouse". For GO analysis we use
\href{https://www.bioconductor.org/packages/release/data/annotation/html/org.Hs.eg.db.html}{org.Hs.eg.db}, and for mouse \href{https://www.bioconductor.org/packages/release/data/annotation/html/org.Mm.eg.db.html}{org.Mm.eg.db}.}

\item{universe}{Character vector of unique ENTREZ gene identifiers to be used
as a universe.}

\item{ontologies}{Character vector of ontologies for which to run the
analysis. If not provided the analysis will be run for all ontologies:
cellular component (CC), biological process (BP) and molecular function
(MF).}

\item{cores}{Integer value representing the number of cores to use. This
parameter is optional. If not provided
\code{\link[foreach]{getDoParWorkers}} function will be called to determine
the number of workers.}

\item{run_parallel}{Boolean indicating whether to run the execution in
parallel. Default is TRUE. If FALSE parameter \code{cores} will be ignored.}
}
\value{
Data frame with the results of GO enrichment.
}
\description{
\code{run_parallel_go} splits provided data frame into a list of data frames
based on the values in the column \strong{set_label} and
using \code{\link[iterators]{isplit}} function. It then runs
\code{get_all_ontologies} in parallel using \pkg{foreach} by sending each
data frame onto a worker.
}
\examples{
\dontrun{
# load test data:
data("human_symbol")
remove duplicate rows:
dat_clean <- deduplicate_rows(human_symbol)
# map symbol to ENTREZ gene id:
dat_mapped <- map_genes(dat_clean, id = "symbol", species = "human")
# extract universe
universe <- unique(dat_mapped$entrez)
# run GO enrichment in parallel for all three ontologies
res <- run_go(dat_mapped, species = "human", universe = universe)
}

}
\seealso{
\code{get_ontology} to understand the output format.
}
